/**
 * 就是按特定的规则组成的用来验证某些字符串的匹配规则的代码
 * 元字符
 *   . 除了换行和回车之外的任意字符 
 *   \d  阿拉伯数字       digit  数字
 *   \D  非数字
 *   \s   不可见字符  空格  回车  换行   space  空间
 *   \S   可见字符   a44a5asqrpowerioqwier#$^(&^^) 
 *   \w   数字大小定字母或_    word  文字
 *   \W   非字符   $  #
 */

//  var reg = new RegExp(/\d/)  // 使用new + 构造函数来创建一个正则对象
//  var reg = /\d/;  // 验证某些字符串里面有没有一个数字,有一个就符合要求
//  var str = "abc25"
//  var b = reg.test(str)
//  console.log(b);

// var reg = /\d{9}/;  // 
// var str = "1234a567b89"  //false 上面的验证规则必须是连贯的，如果不连贯也不可以

// var reg = /\d{9}/; // 没有^$一块使用的时候,表示不严格模式,超过了也可以为true
// var str = "123485627989123456789"
// var str = "12345678" // 少了不可以,多了是可以的


// var reg = /^\d{6}$/;  // 严格模式下,必须一模一样,多一个不行，少一个也不行
// var str = "12345"

var regPhone = /^1[3578]\d{9}$/; // [] 表示其中的任何一个  \d{9} 表示数字要有9个任何数字
// var str = "19012345678"
var str = "18000000000"
console.log(regPhone.test(str));

// 使用正则的test方法来检测其它字符串是否符合正则的要求,如果符合就返回true,如果不符合就返回false